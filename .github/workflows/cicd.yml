name: cicd

on: push

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Download dependencies
        run: npm install

      - name: Run tests
        run: npm run test
steps:
- name: Checkout repo
uses: actions/checkout@v3
- name: Install dependencies
run: npm install
working-directory: nodejs-server-server-generated
- name: Run tests
run: npm test
working-directory: nodejs-server-server-generated

cd:
name: Continuous Deployment
needs: ci # Ensure CD runs only after CI succeeds
runs-on: ubuntu-latest
steps:
- name: Checkout repo
uses: actions/checkout@v3
- name: Set up Node.js
uses: actions/setup-node@v3
with:
node-version: 16 # Use the version your app requires
- name: Install dependencies
run: npm install
working-directory: nodejs-server-server-generated
      - name: Deploy to hosting service
      - name: Deploy to Heroku
run: |
          # Example deployment command for Heroku
          heroku login --apikey ${{ secrets.HEROKU_API_KEY }}
          git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
          echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token
          git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
          git push heroku main
       env:
HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
